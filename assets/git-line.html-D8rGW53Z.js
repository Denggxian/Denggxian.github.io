import{_ as s,o as n,c as a,e}from"./app-DrVrfsFT.js";const t={},i=e(`<h2 id="fork" tabindex="-1"><a class="header-anchor" href="#fork"><span>fork</span></a></h2><h3 id="github进行fork后如何与原仓库同步" tabindex="-1"><a class="header-anchor" href="#github进行fork后如何与原仓库同步"><span>Github进行fork后如何与原仓库同步</span></a></h3><p>假设有原仓库base,我们将其fork到自己的仓库中self,然后将self代码clone到本地 <br> 然后base更新了代码，此时我们本地的self如何拉取base的新代码？</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> remote <span class="token parameter variable">-v</span></span>
<span class="line">输出如下：</span>
<span class="line">origin	https://github.com/xxx/self <span class="token punctuation">(</span>fetch<span class="token punctuation">)</span></span>
<span class="line">origin	https://github.com/xxx/self <span class="token punctuation">(</span>push<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> remote <span class="token function">add</span> fork https://github.com/base/base.git</span>
<span class="line">再次git remote <span class="token parameter variable">-v</span>  输出如下：</span>
<span class="line">fork  https://github.com/base/base.git <span class="token punctuation">(</span>fetch<span class="token punctuation">)</span></span>
<span class="line">fork  https://github.com/base/base.git <span class="token punctuation">(</span>push<span class="token punctuation">)</span></span>
<span class="line">origin	https://github.com/xxx/self <span class="token punctuation">(</span>fetch<span class="token punctuation">)</span></span>
<span class="line">origin	https://github.com/xxx/self <span class="token punctuation">(</span>push<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> fetch fork</span>
<span class="line">好像还要merge<span class="token punctuation">..</span><span class="token punctuation">..</span> pull<span class="token punctuation">..</span></span>
<span class="line">建议本地的代码用主分支来fetch源仓库的修改 （保证这个分支和base相同），</span>
<span class="line">在其他分支中修改，需要同步的时候再从主分支合代码到开发分支</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),l=[i];function c(p,o){return n(),a("div",null,l)}const u=s(t,[["render",c],["__file","git-line.html.vue"]]),d=JSON.parse('{"path":"/git/git-line.html","title":"git命令","lang":"zh-CN","frontmatter":{"title":"git命令"},"headers":[{"level":2,"title":"fork","slug":"fork","link":"#fork","children":[{"level":3,"title":"Github进行fork后如何与原仓库同步","slug":"github进行fork后如何与原仓库同步","link":"#github进行fork后如何与原仓库同步","children":[]}]}],"git":{"updatedTime":1723393927000,"contributors":[{"name":"deng","email":"1179794786@qq.com","commits":1}]},"filePathRelative":"git/git-line.md"}');export{u as comp,d as data};
